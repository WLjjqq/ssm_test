<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.AScMapper">
	<resultMap id="Base_ResultMap" type="java.util.Map">
		<id column="s_id" property="sId" jdbcType="INTEGER"/>
		<result column="c_id" property="cId" jdbcType="INTEGER"/>
		<result column="score" property="sCore" jdbcType="VARCHAR"/>
	</resultMap>
	<!--查询学生平均成绩及其名次 -->
    <select id="selectAvg" resultMap="Base_ResultMap">
		SELECT 1+(SELECT COUNT( distinct 平均成绩)
              FROM (SELECT S_ID,AVG(score) AS 平均成绩
                      FROM A_SC
                  GROUP BY S_ID
                  ) AS T1
            WHERE 平均成绩 > T2.平均成绩) as 名次,
      S_ID as 学生学号,平均成绩
    FROM (SELECT S_ID,AVG(score) 平均成绩
            FROM A_SC
        GROUP BY S_ID
        ) AS T2
    ORDER BY 平均成绩 desc
	</select>
	<!--查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分 -->
	<select id="selectMaxAndMin" resultMap="Base_ResultMap">
			SELECT L.C_ID As 课程ID,L.score AS 最高分,R.score AS 最低分
	FROM A_SC L ,A_SC AS R
	WHERE L.C_ID = R.C_ID and
	L.score = (SELECT MAX(IL.score)
	FROM A_SC AS IL,A_Student AS IM
	WHERE L.C_ID = IL.C_ID and IM.S_ID=IL.S_ID
	GROUP BY IL.C_ID)
	AND
	R.Score = (SELECT MIN(IR.score)
	FROM A_SC AS IR
	WHERE R.C_ID = IR.C_ID
	GROUP BY IR.C_ID
	)
	</select>
	<!--查询“001”课程比“002”课程成绩高的所有学生的学号；-->
<select id="selectAGreaterB" parameterType="map"  resultMap="Base_ResultMap">
			SELECT
			aaa.s_id
		FROM
			(
				SELECT
					aa.s_id,
					aa.score
				FROM
					a_sc aa
				WHERE
					aa.c_id = #{cId}
			) aaa
		INNER JOIN
			(
				SELECT
					bb.s_id,
					bb.score
				FROM
					a_sc bb
				WHERE
					bb.c_id = #{cId2}
			) bbb
		on aaa.s_id=bbb.s_id
		where aaa.score>bbb.score
</select>
	<!--查询平均成绩大于60的学生的学号，平均成绩-->
<select id="selectAvgGreaterScore" parameterType="java.lang.Integer" resultMap="Base_ResultMap">
	select a.s_id,avg(a.score) score
	from a_sc a
	GROUP BY a.s_id
	HAVING AVG(score) >#{score}
</select>
<!--查询所有同学的学号、姓名、选课数、总成绩； -->
	<select id="selectCountXuanKeShu" resultMap="Base_ResultMap">
		select a.s_id,stu.sname,COUNT(DISTINCT c_id) count,SUM(a.score)
		from a_sc a
		inner JOIN a_student stu
		on a.s_id = stu.s_id
		GROUP BY a.s_id
	</select>
	<!--查询李姓老师有多少个-->
	<select id="selectCountLiTeacher" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT count(teacher.t_id)
		FROM a_teacher teacher
		where teacher.tname like concat(concat(#{tName}),'%')
	</select>
    <!--查询没学过“叶平”老师课的同学的学号、姓名； -->
    <select id="selectSnameAndSid" resultMap="Base_ResultMap">
        SELECT s.s_id,s.sname
        FROM a_student s
        where s.s_id not in
        (SELECT s.s_id
        from a_teacher t
        INNER JOIN a_sc a
        on a.c_id=t.t_id
        INNER JOIN a_student s
        on a.s_id=s.s_id
        where t.tname="叶平")
    </select>
	<!--查询学过“001”并且也学过编号“002”课程的同学的学号、姓名； -->
	<select id="select001And002" parameterType="java.lang.Integer" resultMap="Base_ResultMap">
			SELECT
				a_student.s_id,
				a_student.sname
			FROM
				a_student
			INNER JOIN a_SC ON a_student.s_id = a_sc.s_id
			WHERE
				a_student.s_id = a_sc.s_id
			AND a_sc.c_id = #{param1}
			AND EXISTS (
				SELECT
					*
				FROM
					a_sc AS SC_2
				WHERE
					SC_2.S_id = a_sc.s_id
				AND SC_2.c_id =#{param2}
			);
	</select>
	<!--学叶平老师教的所有课的学生的学号，姓名-->
<select id="selectYepingAllCourse" resultMap="Base_ResultMap">
			SELECT
			a.s_id,
			a.sname
		FROM
			a_student a
		WHERE
			a.s_id IN (
				SELECT
			a.s_id
		FROM
			a_sc a
		INNER JOIN a_course b ON a.c_id = b.c_id
		INNER JOIN a_teacher c ON c.t_id = b.t_id
		WHERE
			c.tname = #{name}
		GROUP BY
			a.s_id
		HAVING
			count(a.c_id) = (
				SELECT
					count(a_course.c_id)
				FROM
					a_course
				INNER JOIN a_teacher ON a_teacher.t_id = a_course.t_id
				WHERE
					a_teacher.tname = #{name}
			)
			);
</select>
</mapper>